#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -I../sdx_api
CFLAGS = -std=c++11 -DGUID_LIBUUID
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -Wall -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/libSdxApi.a

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -Wall -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/libSdxApi.a

OBJ_DEBUG = $(OBJDIR_DEBUG)/remote_simulator.o $(OBJDIR_DEBUG)/attitude.o $(OBJDIR_DEBUG)/cmd_client.o $(OBJDIR_DEBUG)/command_base.o $(OBJDIR_DEBUG)/command_exception.o $(OBJDIR_DEBUG)/command_factory.o $(OBJDIR_DEBUG)/command_result.o $(OBJDIR_DEBUG)/command_result_factory.o $(OBJDIR_DEBUG)/all_commands.o $(OBJDIR_DEBUG)/ecef.o $(OBJDIR_DEBUG)/enu.o $(OBJDIR_DEBUG)/guid.o $(OBJDIR_DEBUG)/hil_client.o $(OBJDIR_DEBUG)/lla.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/remote_simulator.o $(OBJDIR_RELEASE)/attitude.o $(OBJDIR_RELEASE)/cmd_client.o $(OBJDIR_RELEASE)/command_base.o $(OBJDIR_RELEASE)/command_exception.o $(OBJDIR_RELEASE)/command_factory.o $(OBJDIR_RELEASE)/command_result.o $(OBJDIR_RELEASE)/command_result_factory.o $(OBJDIR_RELEASE)/all_commands.o $(OBJDIR_RELEASE)/ecef.o $(OBJDIR_RELEASE)/enu.o $(OBJDIR_RELEASE)/guid.o $(OBJDIR_RELEASE)/hil_client.o $(OBJDIR_RELEASE)/lla.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(AR) rcs $(OUT_DEBUG) $(OBJ_DEBUG)

$(OBJDIR_DEBUG)/remote_simulator.o: remote_simulator.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c remote_simulator.cpp -o $(OBJDIR_DEBUG)/remote_simulator.o

$(OBJDIR_DEBUG)/attitude.o: attitude.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c attitude.cpp -o $(OBJDIR_DEBUG)/attitude.o

$(OBJDIR_DEBUG)/cmd_client.o: cmd_client.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c cmd_client.cpp -o $(OBJDIR_DEBUG)/cmd_client.o

$(OBJDIR_DEBUG)/command_base.o: command_base.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c command_base.cpp -o $(OBJDIR_DEBUG)/command_base.o

$(OBJDIR_DEBUG)/command_exception.o: command_exception.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c command_exception.cpp -o $(OBJDIR_DEBUG)/command_exception.o

$(OBJDIR_DEBUG)/command_factory.o: command_factory.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c command_factory.cpp -o $(OBJDIR_DEBUG)/command_factory.o

$(OBJDIR_DEBUG)/command_result.o: command_result.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c command_result.cpp -o $(OBJDIR_DEBUG)/command_result.o

$(OBJDIR_DEBUG)/command_result_factory.o: command_result_factory.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c command_result_factory.cpp -o $(OBJDIR_DEBUG)/command_result_factory.o

$(OBJDIR_DEBUG)/all_commands.o: all_commands.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c all_commands.cpp -o $(OBJDIR_DEBUG)/all_commands.o

$(OBJDIR_DEBUG)/ecef.o: ecef.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ecef.cpp -o $(OBJDIR_DEBUG)/ecef.o

$(OBJDIR_DEBUG)/enu.o: enu.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c enu.cpp -o $(OBJDIR_DEBUG)/enu.o

$(OBJDIR_DEBUG)/guid.o: guid.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c guid.cpp -o $(OBJDIR_DEBUG)/guid.o

$(OBJDIR_DEBUG)/hil_client.o: hil_client.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c hil_client.cpp -o $(OBJDIR_DEBUG)/hil_client.o

$(OBJDIR_DEBUG)/lla.o: lla.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lla.cpp -o $(OBJDIR_DEBUG)/lla.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(AR) rcs $(OUT_RELEASE) $(OBJ_RELEASE)

$(OBJDIR_RELEASE)/remote_simulator.o: remote_simulator.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c remote_simulator.cpp -o $(OBJDIR_RELEASE)/remote_simulator.o

$(OBJDIR_RELEASE)/attitude.o: attitude.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c attitude.cpp -o $(OBJDIR_RELEASE)/attitude.o

$(OBJDIR_RELEASE)/cmd_client.o: cmd_client.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cmd_client.cpp -o $(OBJDIR_RELEASE)/cmd_client.o

$(OBJDIR_RELEASE)/command_base.o: command_base.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c command_base.cpp -o $(OBJDIR_RELEASE)/command_base.o

$(OBJDIR_RELEASE)/command_exception.o: command_exception.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c command_exception.cpp -o $(OBJDIR_RELEASE)/command_exception.o

$(OBJDIR_RELEASE)/command_factory.o: command_factory.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c command_factory.cpp -o $(OBJDIR_RELEASE)/command_factory.o

$(OBJDIR_RELEASE)/command_result.o: command_result.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c command_result.cpp -o $(OBJDIR_RELEASE)/command_result.o

$(OBJDIR_RELEASE)/command_result_factory.o: command_result_factory.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c command_result_factory.cpp -o $(OBJDIR_RELEASE)/command_result_factory.o

$(OBJDIR_RELEASE)/all_commands.o: all_commands.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c all_commands.cpp -o $(OBJDIR_RELEASE)/all_commands.o

$(OBJDIR_RELEASE)/ecef.o: ecef.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ecef.cpp -o $(OBJDIR_RELEASE)/ecef.o

$(OBJDIR_RELEASE)/enu.o: enu.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c enu.cpp -o $(OBJDIR_RELEASE)/enu.o

$(OBJDIR_RELEASE)/guid.o: guid.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c guid.cpp -o $(OBJDIR_RELEASE)/guid.o

$(OBJDIR_RELEASE)/hil_client.o: hil_client.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c hil_client.cpp -o $(OBJDIR_RELEASE)/hil_client.o

$(OBJDIR_RELEASE)/lla.o: lla.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lla.cpp -o $(OBJDIR_RELEASE)/lla.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

